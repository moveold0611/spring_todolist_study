{"ast":null,"code":"var _jsxFileName = \"C:\\\\aws\\\\spring_todolist\\\\front\\\\todolist\\\\src\\\\pages\\\\main\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main(props) {\n  _s();\n  const navigate = useNavigate();\n  try {\n    let decoded = jwt_decode(localStorage.getItem(\"accessToken\").substring(7));\n    console.log(decoded.username);\n  } catch (error) {\n    console.log(error);\n  }\n  useEffect(() => {\n    if (!localStorage.getItem(\"accessToken\")) {\n      navigate(\"/signin\");\n    }\n  }, []);\n  const handleOnChange = e => {};\n  const handleOnClick = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"todolist\",\n      onChange: handleOnChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOnClick,\n      children: \"todo \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","jwt_decode","useNavigate","jsxDEV","_jsxDEV","Main","props","_s","navigate","decoded","localStorage","getItem","substring","console","log","username","error","handleOnChange","e","handleOnClick","children","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/aws/spring_todolist/front/todolist/src/pages/main/Main.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport jwt_decode from \"jwt-decode\"\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Main(props) {\r\n    const navigate =  useNavigate();\r\n    try {\r\n        let decoded = jwt_decode(localStorage.getItem(\"accessToken\").substring(7))\r\n        console.log(decoded.username)\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(!localStorage.getItem(\"accessToken\")) {\r\n            navigate(\"/signin\")\r\n        }\r\n    }, [])\r\n\r\n    const handleOnChange = (e) => {\r\n\r\n    }\r\n\r\n    const handleOnClick = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input placeholder='todolist' onChange={handleOnChange}/>\r\n            <button onClick={handleOnClick}>todo 추가</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAIN,WAAW,CAAC,CAAC;EAC/B,IAAI;IACA,IAAIO,OAAO,GAAGR,UAAU,CAACS,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC1EC,OAAO,CAACC,GAAG,CAACL,OAAO,CAACM,QAAQ,CAAC;EACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;EACtB;EAEAhB,SAAS,CAAC,MAAI;IACV,IAAG,CAACU,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,EAAE;MACrCH,QAAQ,CAAC,SAAS,CAAC;IACvB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,cAAc,GAAIC,CAAC,IAAK,CAE9B,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM,CAE5B,CAAC;EAED,oBACIf,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAOiB,WAAW,EAAC,UAAU;MAACC,QAAQ,EAAEL;IAAe;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzDtB,OAAA;MAAQuB,OAAO,EAAER,aAAc;MAAAC,QAAA,EAAC;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEd;AAACnB,EAAA,CA7BQF,IAAI;EAAA,QACSH,WAAW;AAAA;AAAA0B,EAAA,GADxBvB,IAAI;AA+Bb,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}