{"ast":null,"code":"import { Navigate, useLocation } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nfunction AuthRoute(ro) {\n  // const location = useLocation();\n  // const pathname = location.pathname;\n  // const permitAllPath = [\"/account\"];\n  //     window.location.replace(\"/\"); 새로고침\n\n  // const authenticateState\n  //     = useQuery([\"authenticate\"], authenticate, {\n  //         retry: 0,\n  //         refetchOnWindowFocus: false\n  //     }); // useQuery는 모두 get요청\n\n  // if(authenticateState.isError) {\n  //     for(let path of permitAllPath) {\n  //         if(pathname.startsWith(path)) {\n  //             return element;\n  //         }\n  //     }\n  //     return <Navigate to={\"/\"}/>\n  // }\n\n  // for(let path of permitAllPath) {\n  //     if(pathname.startsWith(path)) {\n  //         return <Navigate to={\"/\"}/>\n  //     }\n  // }\n\n  return element;\n}\n_c = AuthRoute;\nvar _c;\n$RefreshReg$(_c, \"AuthRoute\");","map":{"version":3,"names":["Navigate","useLocation","useQuery","AuthRoute","ro","element","_c","$RefreshReg$"],"sources":["C:/aws/spring_todolist/front/todolist/src/auth/AuthRoute.jsx"],"sourcesContent":["import { Navigate, useLocation } from 'react-router-dom';\r\nimport { useQuery } from 'react-query';\r\n\r\nfunction AuthRoute(ro) {\r\n    // const location = useLocation();\r\n    // const pathname = location.pathname;\r\n    // const permitAllPath = [\"/account\"];\r\n    //     window.location.replace(\"/\"); 새로고침\r\n\r\n    // const authenticateState\r\n    //     = useQuery([\"authenticate\"], authenticate, {\r\n    //         retry: 0,\r\n    //         refetchOnWindowFocus: false\r\n    //     }); // useQuery는 모두 get요청\r\n\r\n\r\n    // if(authenticateState.isError) {\r\n    //     for(let path of permitAllPath) {\r\n    //         if(pathname.startsWith(path)) {\r\n    //             return element;\r\n    //         }\r\n    //     }\r\n    //     return <Navigate to={\"/\"}/>\r\n    // }\r\n\r\n    // for(let path of permitAllPath) {\r\n    //     if(pathname.startsWith(path)) {\r\n    //         return <Navigate to={\"/\"}/>\r\n    //     }\r\n    // }\r\n\r\n    \r\n    return element;\r\n}"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,QAAQ,QAAQ,aAAa;AAEtC,SAASC,SAASA,CAACC,EAAE,EAAE;EACnB;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAGA,OAAOC,OAAO;AAClB;AAACC,EAAA,GA9BQH,SAAS;AAAA,IAAAG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}